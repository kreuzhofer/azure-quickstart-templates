{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "virtualMachineName": {
          "type": "string",
          "defaultValue": "resilio",
          "metadata": {
              "description" : "Name for the virtual machine. Please keep it short as other resources names are derived from it."
          }
      },
      "virtualMachineSize": {
          "type": "string",
          "defaultValue": "Standard_A1"
      },
      "adminUsername": {
          "type": "string",
          "metadata": {
              "description" : "Username for logging on to the linux VM. You also need a ssh public key to log in with this username."
          }
      },
      "adminPublicKey": {
        "type": "string"
      }
  },
  "variables": {
      "vnetName" : "[concat(parameters('virtualMachineName'), 'vnet')]",
      "publicIpAddressName" : "[concat(parameters('virtualMachineName'), 'pip')]",
      "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
      "subnetName" : "[concat(parameters('virtualMachineName'), 'sn')]",
      "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
      "addressPrefix" : "10.0.0.0/24",
      "subnetPrefix" : "10.0.0.0/24",
      "networkInterfaceName" : "[concat(parameters('virtualMachineName'), 'nic')]",
      "networkSecurityGroupName" : "[concat(parameters('virtualMachineName'), 'nsg')]",
      "storageAccountName" : "[concat(parameters('virtualMachineName'), 'sa')]",
      "storageAccountType" : "Standard_LRS",
      "dataDiskName" : "[concat(parameters('virtualMachineName'), '-data')]"
  },
  "resources": [
      {
          "name": "[parameters('virtualMachineName')]",
          "type": "Microsoft.Compute/virtualMachines",
          "apiVersion": "2017-03-30",
          "location": "[resourceGroup().location]",
          "dependsOn": [
              "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]",
              "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
          ],
          "properties": {
              "osProfile": {
                  "computerName": "[parameters('virtualMachineName')]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "linuxConfiguration": {
                      "disablePasswordAuthentication": true,
                      "ssh": {
                          "publicKeys": [
                              {
                                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                  "keyData": "[parameters('adminPublicKey')]"
                              }
                          ]
                      }
                  }
              },
              "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachineSize')]"
              },
              "storageProfile": {
                  "imageReference": {
                      "publisher": "Canonical",
                      "offer": "UbuntuServer",
                      "sku": "16.04-LTS",
                      "version": "latest"
                  },
                  "osDisk": {
                      "createOption": "FromImage",
                      "vhd": {
                          "uri": "[concat(concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-06-15').primaryEndpoints['blob'], 'vhds/'), parameters('virtualMachineName'), '.vhd')]"
                      },
                      "name": "[parameters('virtualMachineName')]"
                  },
                  "dataDisks": [
                    {
                        "lun": 0,
                        "name": "[variables('dataDiskName')]",
                        "createOption": "Empty",
                        "vhd": {
                            "uri": "[concat('https', '://', variables('storageAccountName'), '.blob.core.windows.net', concat('/vhds/', variables('dataDiskName'), '.vhd'))]"
                        },
                        "caching": "None",
                        "diskSizeGB": 4095
                    }
                ]
              },
              "networkProfile": {
                  "networkInterfaces": [
                      {
                          "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                      }
                  ]
              }
          }
      },
      {
          "name": "microsoft.custom-script-linux-20180124104141",
          "apiVersion": "2015-01-01",
          "type": "Microsoft.Resources/deployments",
          "properties": {
              "mode": "incremental",
              "templateLink": {
                  "uri": "https://gallery.azure.com/artifact/20161101/microsoft.custom-script-linux-arm.2.0.50/Artifacts/MainTemplate.json"
              },
              "parameters": {
                  "vmName": {
                      "value": "[parameters('virtualMachineName')]"
                  },
                  "location": {
                      "value": "[resourceGroup().location]"
                  },
                  "fileUris": {
                      "value": ["https://raw.githubusercontent.com/kreuzhofer/azure-quickstart-templates/master/resilio-storage-node/Scripts/customscript.sh","https://raw.githubusercontent.com/kreuzhofer/azure-quickstart-templates/master/resilio-storage-node/Scripts/haproxy.cfg"]
                  },
                  "commandToExecute": {
                      "value": "[concat('sh customscript.sh -h', reference(variables('publicIPAddressName')).dnsSettings.fqdn)]"
                  }
              }
          },
          "dependsOn": [
              "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
          ]
      },
      {
          "name": "[variables('storageAccountName')]",
          "type": "Microsoft.Storage/storageAccounts",
          "apiVersion": "2015-06-15",
          "location": "[resourceGroup().location]",
          "properties": {
              "accountType": "[variables('storageAccountType')]"
          }
      },
      {
          "name": "[variables('vnetName')]",
          "type": "Microsoft.Network/virtualNetworks",
          "apiVersion": "2017-08-01",
          "location": "[resourceGroup().location]",
          "properties": {
              "addressSpace": {
                  "addressPrefixes": [
                      "[variables('addressPrefix')]"
                  ]
              },
              "subnets": [
                  {
                      "name": "[variables('subnetName')]",
                      "properties": {
                          "addressPrefix": "[variables('subnetPrefix')]"
                      }
                  }
              ]
          }
      },
      {
          "name": "[variables('networkInterfaceName')]",
          "type": "Microsoft.Network/networkInterfaces",
          "apiVersion": "2016-09-01",
          "location": "[resourceGroup().location]",
          "dependsOn": [
              "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
              "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]",
              "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
          ],
          "properties": {
              "ipConfigurations": [
                  {
                      "name": "ipconfig1",
                      "properties": {
                          "subnet": {
                              "id": "[variables('subnetRef')]"
                          },
                          "privateIPAllocationMethod": "Dynamic",
                          "publicIpAddress": {
                              "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                          }
                      }
                  }
              ],
              "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
          }
      },
      {
          "name": "[variables('publicIpAddressName')]",
          "type": "Microsoft.Network/publicIpAddresses",
          "apiVersion": "2017-08-01",
          "location": "[resourceGroup().location]",
          "properties": {
              "publicIpAllocationMethod": "Static",
              "dnsSettings": {
                "domainNameLabel": "[parameters('virtualMachineName')]"
              }
          },
          "sku": {
              "name": "Basic"
          }
      },
      {
          "name": "[variables('networkSecurityGroupName')]",
          "type": "Microsoft.Network/networkSecurityGroups",
          "apiVersion": "2017-06-01",
          "location": "[resourceGroup().location]",
          "properties": {
              "securityRules": [
                  {
                      "name": "HTTPS",
                      "properties": {
                          "priority": 100,
                          "protocol": "TCP",
                          "access": "Allow",
                          "direction": "Inbound",
                          "sourceAddressPrefix": "*",
                          "sourcePortRange": "*",
                          "destinationAddressPrefix": "*",
                          "destinationPortRange": "443"
                      }
                  },
                  {
                    "name": "HTTP",
                    "properties": {
                        "priority": 101,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "80"
                    }
                  },
                  {
                      "name": "default-allow-ssh",
                      "properties": {
                          "priority": 1000,
                          "protocol": "TCP",
                          "access": "Allow",
                          "direction": "Inbound",
                          "sourceAddressPrefix": "*",
                          "sourcePortRange": "*",
                          "destinationAddressPrefix": "*",
                          "destinationPortRange": "22"
                      }
                  }
              ]
          }
      }
  ],
  "outputs": {
      "adminUsername": {
          "type": "string",
          "value": "[parameters('adminUsername')]"
      }
  }
}